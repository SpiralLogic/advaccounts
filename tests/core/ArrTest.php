<?php

  /**
   * Generated by PHPUnit_SkeletonGenerator on 2012-04-06 at 04:05:58.
   */

  class ArrTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Arr
     */
    protected $object;

    /**
     * @covers ADV\Core\Arr::insert
     * @todo   Implement testInsert().
     * @return void
     */
    public function testInsert() {
      $part_numbers = array('84256', '84257', '84258');
      $expected_result = array('84256', '84257', '86732', '84258');
      \ADV\Core\Arr::insert($part_numbers, 2, '86732');
      $this->assertEquals($expected_result, $part_numbers);
    }

    /**
     * @covers ADV\Core\Arr::remove
     * @todo   Implement testRemove().
     */
    public function testRemove() {
      $people = array("Jack", "Jill");
      $expected = array("Jack");
      Arr::remove($people, 1);
      $this->assertEquals($expected, $people);
      $people = array("Humpty", "Jack", "Jill");
      Arr::remove($people, 1, 2);
      $expected = array("Humpty");
      $this->assertEquals($expected, $people);
    }

    /**
     * @covers ADV\Core\Arr::get
     * @todo   Implement testGet().
     */
    public function testGet() {
      $people = array("test1" => "Jack", "test2" => "Jill");
      $expected = "Jill";
      $ouput = Arr::get($people, 'test2');
      $this->assertEquals($expected, $ouput);
      $ouput = Arr::get($people, 'test2');
      $this->assertEquals($expected, $ouput);
      $ouput = Arr::get($people, 'test3', "Humpty");
      $expected = "Humpty";
      $this->assertEquals($expected, $ouput);
    }

    /**
     * @covers ADV\Core\Arr::substitute
     * @todo   Implement testSubstitute().
     */
    public function testSubstitute() {
      $part_numbers = array('84256', '84257', '84258');
      $expected_result = array('84256', '86732', '84258');
      \ADV\Core\Arr::substitute($part_numbers, 1, 1, '86732');
      $this->assertEquals($expected_result, $part_numbers);
    }

    /**
     * @covers ADV\Core\Arr::append
     * @todo   Implement testAppend().
     */
    public function testAppend() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
        'This test has not been implemented yet.'
      );
    }

    /**
     * @covers ADV\Core\Arr::search_value
     * @todo   Implement testSearch_value().
     */
    public function testSearch_value() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
        'This test has not been implemented yet.'
      );
    }

    /**
     * @covers ADV\Core\Arr::search_key
     * @todo   Implement testSearch_key().
     */
    public function testSearch_key() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
        'This test has not been implemented yet.'
      );
    }

    /**
     * @covers ADV\Core\Arr::natsort
     * @todo   Implement testNatsort().
     */
    public function testNatsort() {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete(
        'This test has not been implemented yet.'
      );
    }
  }
