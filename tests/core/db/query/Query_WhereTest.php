<?php
  namespace ADV\Core\DB;

  /**
   * Generated by PHPUnit_SkeletonGenerator on 2012-06-05 at 06:09:28.
   */
  class Query_WhereTest extends \PHPUnit_Framework_TestCase
  {
    /**
     * @var Query_Where
     */
    protected $object;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    /**
     * @covers ADV\Core\DB\Query_Where::where
     * @todo   Implement testWhere().
     */
    public function testWhere()
    {
      /** @var Query_Where $stub  */
      $stub = $this->getMockForAbstractClass('\\ADV\\Core\\DB\\Query_Where');
      $this->assertEquals($stub, $stub->where('test=', 3));

      $this->assertAttributeEquals([0=> 'test= :dbcondition0'], 'where', $stub);
      $this->assertAttributeEquals([':dbcondition0'=> 3], 'wheredata', $stub);
    }
    public function testWhereWithArray()
    {
      /** @var Query_Where $stub  */
      $stub = $this->getMockForAbstractClass('\\ADV\\Core\\DB\\Query_Where');
      $this->assertEquals($stub, $stub->where([['test=', 3], ['test2=', 5]]));

      $this->assertAttributeEquals([0=> 'test= :dbcondition0', 1=> 'AND test2= :dbcondition1'], 'where', $stub);
      $this->assertAttributeEquals([':dbcondition0'=> 3, ':dbcondition1'=> 5], 'wheredata', $stub);
    }
    /**
     * @covers ADV\Core\DB\Query_Where::or_where
     * @todo   Implement testOr_where().
     */
    public function testOr_where()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::and_where
     * @todo   Implement testAnd_where().
     */
    public function testAnd_where()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::or_open
     * @todo   Implement testOr_open().
     */
    public function testOr_open()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::and_open
     * @todo   Implement testAnd_open().
     */
    public function testAnd_open()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::close_and
     * @todo   Implement testClose_and().
     */
    public function testClose_and()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::close_or
     * @todo   Implement testClose_or().
     */
    public function testClose_or()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::open
     * @todo   Implement testOpen().
     */
    public function testOpen()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
    /**
     * @covers ADV\Core\DB\Query_Where::close
     * @todo   Implement testClose().
     */
    public function testClose()
    {
      // Remove the following lines when you implement this test.
      $this->markTestIncomplete('This test has not been implemented yet.');
    }
  }
