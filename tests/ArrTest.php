<?php

require_once 'C:\dev\accounts\includes\core\arr.php';

/**
 * Test class for Arr.
 * Generated by PHPUnit on 2011-12-21 at 03:05:58.
 */
class ArrTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Arr
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Arr;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testInsert().
     */
    public function testInsert()
    {
        $people = array("Jack", "Jill");

      		$expected = array("Humpty", "Jack", "Jill");
      		$output = Arr::insert($people, 0, "Humpty");

      		$this->assertEquals(true, $output);
      		$this->assertEquals($expected, $people);
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testRemove().
     */
    public function testRemove()
    {
      $people = array("Humpty","Jack","Jill");
			$output = Arr::remove($people,1,1);
			$expected = array("Humpty","Jill");
			$this->assertTrue(true,$output);
			$this->assertEquals($expected,$people);
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testSubstitute().
     */
    public function testSubstitute()
    {
			$people = array("Humpty","Jack","Jill");
						$output = Arr::substitute($people,1,2,array("Steve","Tom"));
						$expected = array("Humpty","Steve","Tom");
						$this->assertTrue(true,$output);
						$this->assertEquals($expected,$people);
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testAppend().
     */
    public function testAppend()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testSearch_value().
     */
    public function testSearch_value()
    {
			$people = array("Steve","Tom","wawa");
       $output =  Arr::search_value('wawa',$people);
    $this->assertEquals(3,$output);

		}

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testSearch_key().
     */
    public function testSearch_key()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testNatsort().
     */
    public function testNatsort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
