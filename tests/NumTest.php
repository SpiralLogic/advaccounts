<?php

	require_once '/Users/Maidenii/Desktop/dev/accounts/includes/core/num.php';
	/**
	 * Test class for Num.
	 * Generated by PHPUnit on 2011-12-27 at 16:37:05.
	 */
	class NumTest extends PHPUnit_Framework_TestCase
	{
		/**
		 * @var Num
		 */
		protected $object;

		/**
		 * Sets up the fixture, for example, opens a network connection.
		 * This method is called before a test is executed.
		 */
		protected function setUp() {
			$this->object = new Num;
		}

		/**
		 * Tears down the fixture, for example, closes a network connection.
		 * This method is called after a test is executed.
		 */
		protected function tearDown() {
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testPrice_format().
		 */
		public function testPrice_format() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testPrice_decimal().
		 */
		public function testPrice_decimal() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testRound().
		 */
		public function testRound() {
			$number = "1.111111";
			$result = Num::round($number, 2);
			$this->assertEquals($result, 1.11);
			$number = "1.0";
			$result = Num::round($number, 2);
			$this->assertEquals($result, 1.00);
			$number = "1.115";
			$result = Num::round($number, 2);
			$this->assertEquals($result, 1.12);
			$number = "1.116";
			$result = Num::round($number, 2);
			$this->assertEquals($result, 1.12);
			$number = "0.15";
			$result = Num::round($number, 1);
			$this->assertEquals($result, 0.2);
			$number = "0.25";
			$result = Num::round($number, 1);
			$this->assertEquals($result, 0.2);
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testFormat().
		 */
		public function testFormat() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testExrate_format().
		 */
		public function testExrate_format() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testPercent_format().
		 */
		public function testPercent_format() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testRound_to_nearest().
		 */
		public function testRound_to_nearest() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}

		/**
		 * @covers {className}::{origMethodName}
		 * @todo   Implement testTo_words().
		 */
		public function testTo_words() {
			// Remove the following lines when you implement this test.
			$this->markTestIncomplete('This test has not been implemented yet.');
		}
	}

?>
